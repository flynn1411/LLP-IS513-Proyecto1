// ! Gramática de Ruby
// ? Una gramática simple de Ruby que contiene:
// * Comentarios simples o múltiples
// * Asignaciones de cadenas, boleanos, números y nulos
// * Declaración y Ejecición de Funciones
// * Estructuras de control: if, while, for
// @author: flynn1411
// @version: 0.1
// @date: 04/08/2020


//Comienzo de gramática
?start: statement+

//Definición de una instrucción
?statement: identifier "=" expression "\n"?
    | "puts" "("? string ")"? "\n"?
//    | ifstatement

//Definición de una expresión
?expression: null
    | arithmeticexpression
    | booleanexpression

//?ifstatement: if expression

?booleanexpression: booleanatom
    | expression "==" arithmeticexpression
    | expression ">=" arithmeticexpression
    | expression "<=" arithmeticexpression
    | expression ">" arithmeticexpression
    | expression "<" arithmeticexpression

?arithmeticexpression: term
    | arithmeticexpression "+" "("? arithmeticexpression ")"?
    | arithmeticexpression "-" "("? arithmeticexpression ")"?

?term: atom
    | term "*" atom
    | term "/" atom

?atom: identifier
    | number
    | string

?identifier: /[a-zA-z]\w*/

?number: /\d+(\.\d+)?/

?string: /"[^"]*"/
    | /'[^']*'/

?booleanatom: /True/
    |  /False/

?null: /nil/

//?nothing: /(\s)/
//    | /(#[^\n]*\n)/
//    | /^\/(comment)?[\w\W]*\n(uncomment)?\/$/
//    | /^=begin\n[\w\W]*\n=end$/
//    | /\n/

%ignore /(\s)|(#[^\n]*\n)|(^\/(comment)?[\w\d\s]*\n(uncomment)?\/$)|(^=begin\n[\w\W]*\n=end$)/