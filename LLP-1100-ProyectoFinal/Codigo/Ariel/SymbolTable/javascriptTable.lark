// Tomado de la gramÃ¡tica creada por:
// @author Fernando y Gabriel
// @date 03-08-2020
// @version 0.1

?start: exp+ 

?exp: identifier "=" expresion ";" -> assigvar
    | "console" "." "log" "(" expresion ")" ";"
    | "console" "." "err" "(" expresion ")" ";"
    | "function" identifier "(" parameters ")" "{" instructions "}"
    | "if" "(" expresion ")" "{" instructions "}"
    | "if" "(" expresion ")" "{" instructions "}" "else" "{" instructions "}"
    | "for" "(" exp conditionfor increment ")" "{" instructions"}"
    | expresion 

?conditionfor: atom logicalstmt atom ";"

?logicalstmt: "==" -> logicalequal
    | ">=" -> logicalmorethan
    | "<=" -> logicallessthan
    | ">" -> logicalmore
    | "<" -> logicalless

?parameters: 
    | identifier
    | identifier "," parameters -> saveparams

?arguments:
    | atom
    | atom "," arguments -> sendarguments

?expresion: aritmeticexpresion
    | atom "." "length" "(" ")" -> length
    | identifier "(" arguments ")" ";" -> exefun
    | conditonexpresion    
    | increment

?increment:  identifier "+" "+"-> incremento
    | identifier "-" "-" -> decrement

?conditonexpresion: expresion "==" aritmeticexpresion -> equal
    | expresion ">=" aritmeticexpresion -> greaterequal
    | expresion "<=" aritmeticexpresion -> lesserequal
    | expresion ">" aritmeticexpresion -> greater
    | expresion "<" aritmeticexpresion -> lesser

?aritmeticexpresion: term
    | aritmeticexpresion "+" term -> sum
    | aritmeticexpresion "-" term -> sub

?term: atom
    | term "*" atom -> mul 
    | term "/" atom -> div

?atom: identifier -> getvalue
    | number
    | string        

?identifier: /[a-zA-z]\w*/

?number: /\d+(\.\d+)?/

?string: /"[^"]*"/
    | /'[^']*'/

?instructions:  /[^}]+/ -> parsefun

%ignore /\/\/.+/
%ignore /\/\*[\w\W]*\*\//
%ignore /\s+/